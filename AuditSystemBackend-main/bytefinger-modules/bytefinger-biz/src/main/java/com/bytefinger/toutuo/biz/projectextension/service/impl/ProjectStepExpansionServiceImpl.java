package com.bytefinger.toutuo.biz.projectextension.service.impl;import com.alibaba.fastjson2.JSONObject;import com.baomidou.mybatisplus.core.toolkit.Wrappers;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import com.bytefinger.toutuo.api.biz.project.enums.OAApprovalStatus;import com.bytefinger.toutuo.biz.project.domain.Project;import com.bytefinger.toutuo.biz.project.mapper.ProjectMapper;import com.bytefinger.toutuo.biz.projectextension.entity.ProjectStepExpansion;import com.bytefinger.toutuo.biz.projectextension.entity.ProjectStepExpansionMenu;import com.bytefinger.toutuo.biz.projectextension.mapper.ProjectStepExpansionMapper;import com.bytefinger.toutuo.biz.projectextension.mapper.ProjectStepExpansionMenuMapper;import com.bytefinger.toutuo.biz.projectextension.service.IProjectStepExpansionService;import com.bytefinger.toutuo.biz.projectstep.constants.ProjectStepConstant;import com.bytefinger.toutuo.biz.projectstep.domain.ProjectStep;import com.bytefinger.toutuo.biz.projectstep.domain.ProjectStepMenu;import com.bytefinger.toutuo.biz.projectstep.mapper.ProjectStepMapper;import com.bytefinger.toutuo.biz.projectstep.mapper.ProjectStepMenuMapper;import com.bytefinger.toutuo.biz.projectstep.service.IProjectStepMenuService;import com.bytefinger.toutuo.biz.projectstep.service.IProjectStepService;import com.bytefinger.toutuo.common.enums.ModuleType;import com.bytefinger.toutuo.common.service.SendMessageService;import lombok.AllArgsConstructor;import org.apache.commons.lang3.StringUtils;import org.springframework.stereotype.Service;import org.springframework.util.ObjectUtils;import java.util.Date;import java.util.List;/** * <p> * 拓后项目步骤菜单 * </p> * * @author ycj * @since 2023-03-23 */@Service@AllArgsConstructorpublic class ProjectStepExpansionServiceImpl extends ServiceImpl<ProjectStepExpansionMapper, ProjectStepExpansion> implements IProjectStepExpansionService {    private final ProjectStepExpansionMapper projectStepMapper;    private final ProjectMapper projectMapper;    private final ProjectStepExpansionMenuMapper projectStepMenuMapper;    private final SendMessageService sendMessageService;    @Override    public List<ProjectStepExpansion> listByProjectId(Long projectId) {        return projectStepMapper.selectList(Wrappers.<ProjectStepExpansion>lambdaQuery()                .eq(ProjectStepExpansion::getProjectId, projectId));    }    @Override    public boolean save(ProjectStepExpansion entity) {        return super.save(entity);    }    public static void main(String[] args) {        String d= "{\"DAN_YI_FEI_TOU_BIAO_XIANG_MU\":\"TUO_ZHAN_CHENG_GONG\",\"DAN_YI_FEI_TOU_BIAO_XIANG_MU\":\"TUO_ZHAN_CHENG_GONG\"}";        String serviceStatus = JSONObject.parseObject(d).getString("DAN_YI_FEI_TOU_BIAO_XIANG_MU");        System.out.println(serviceStatus);    }    @Override    public void update(ProjectStepExpansion projectStep) {        ProjectStepExpansion projectStepDB = this.getOne(Wrappers.<ProjectStepExpansion>lambdaQuery().eq(ProjectStepExpansion::getProjectId, projectStep.getProjectId())                .eq(ProjectStepExpansion::getStepMenuId, projectStep.getStepMenuId()));        if(ObjectUtils.isEmpty(projectStepDB)){            this.save(projectStep);        }else{            //如果当前节点已完成则直接返回            if(ProjectStepConstant.PROJECT_STEP_DONE == projectStepDB.getStatus()){                return;            }            projectStep.setId(projectStepDB.getId());            Integer status = (OAApprovalStatus.TONG_GUO.getCode() == projectStep.getApprovalStatus() ||            OAApprovalStatus.XIAN_XIA_SHEN_PI.getCode() == projectStep.getApprovalStatus() ||            OAApprovalStatus.WU_XU_SHEN_PI.getCode() == projectStep.getApprovalStatus()) ? ProjectStepConstant.PROJECT_STEP_DONE : ProjectStepConstant.PROJECT_STEP_UNDONE;            projectStep.setStatus(status);            this.updateById(projectStep);            if(ProjectStepConstant.PROJECT_STEP_DONE == status){                ProjectStepExpansionMenu projectStepMenu = projectStepMenuMapper.selectById(projectStep.getStepMenuId());                if(ProjectStepConstant.YJQRSP.equals(projectStepMenu.getCode())){                    Project project = new Project();                    project.setId(projectStep.getProjectId());                    project.setPerformanceConfirmTime(new Date());                    projectMapper.updateById(project);                }            }        }        if(null != projectStep.getStatus() && ProjectStepConstant.PROJECT_STEP_DONE == projectStep.getStatus()){            //变更项目状态            ProjectStepExpansionMenu projectStepMenu = projectStepMenuMapper.selectById(projectStep.getStepMenuId());            Project project = projectMapper.selectById(projectStep.getProjectId());            if(StringUtils.isNotBlank(projectStepMenu.getServiceStatus())){                String serviceStatus = JSONObject.parseObject(projectStepMenu.getServiceStatus()).getString(project.getProjectType());                if("ZHONG_BIAO_ZHUANG_TAI".equals(serviceStatus)){                    project.setServiceStatus(project.getBidedResult());                    projectMapper.updateById(project);                }else if(StringUtils.isNotBlank(serviceStatus)){                    project.setServiceStatus(serviceStatus);                    projectMapper.updateById(project);                }            }            //特殊通知            if(!ObjectUtils.isEmpty(projectStepMenu.getNotifyUserId())){                String notifyContent = projectStepMenu.getNotifyContent();                if(StringUtils.isNotBlank(notifyContent)){                    notifyContent = notifyContent.replace("${projectname}", project.getProjectName());                }                sendMessageService.sendMessage(projectStepMenu.getNotifyUserId(), projectStep.getProjectId(), "工商信息填写提醒通知",                        notifyContent, ModuleType.PROJECT.getCode(), "XI_TONG_TONG_ZHI" + "," + "DAI_BAN_TONG_ZHI");            }        }    }}