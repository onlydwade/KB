package com.bytefinger.toutuo.common.service;import com.bytefinger.common.mq.Channels;import com.bytefinger.toutuo.api.system.core.domain.SysMessage;import com.bytefinger.toutuo.common.constants.MessageTypeConstant;import lombok.AllArgsConstructor;import org.springframework.cloud.stream.function.StreamBridge;import org.springframework.stereotype.Service;/** * @author pat * @date 2022/10/18 14:01 **/@Service@AllArgsConstructorpublic class SendMessageService {    private final StreamBridge streamBridge;    /**     * 发送消息     *     * @param userId     * @param dataId     * @param title     * @param message     * @param clazzModule     */    public void sendMessage(String messageType, Long userId, Long dataId, String title, String message, Class clazzModule) {        SysMessage sysMessage = new SysMessage();        sysMessage.setMessageType(messageType);        sysMessage.setUserId(userId);        sysMessage.setTitle(title);        sysMessage.setMessage(message);        sysMessage.setModule(clazzModule.getSimpleName());        sysMessage.setModuleId(dataId);        streamBridge.send(Channels.SYSTEM_MESSAGE_NOTIFY, sysMessage);    }    /**     * 发送消息     *     * @param userId     * @param dataId     * @param title     * @param message     */    public void sendMessage(Long userId, Long dataId, String title, String message, String moduleMessage, String channels) {       sendMessage(MessageTypeConstant.MESSAGE_DEFAULT, userId, dataId, title, message, moduleMessage, channels);    }    public void sendMessage(String messageType, Long userId, Long dataId, String title, String message, String moduleMessage, String channels) {        SysMessage sysMessage = new SysMessage();        sysMessage.setUserId(userId);        sysMessage.setTitle(title);        sysMessage.setMessage(message);        sysMessage.setMessageType(messageType);        sysMessage.setModule(moduleMessage);        sysMessage.setModuleId(dataId);        sysMessage.setSendChannels(channels);        streamBridge.send(Channels.SYSTEM_MESSAGE_NOTIFY, sysMessage);    }}