package com.bytefinger.toutuo.biz.companyrisk.domain;import com.baomidou.mybatisplus.annotation.TableName;import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.extension.activerecord.Model;import java.util.Date;import com.baomidou.mybatisplus.annotation.TableId;import com.bytefinger.common.core.domain.BaseEntity;import com.baomidou.mybatisplus.annotation.FieldFill;import com.baomidou.mybatisplus.annotation.TableField;import java.io.Serializable;import com.baomidou.mybatisplus.annotation.TableName;import com.bytefinger.common.core.web.domain.vo.UserVO;import com.bytefinger.common.security.annotation.DataFillField;import com.bytefinger.common.security.enums.FillMethod;import io.swagger.annotations.ApiModel;import io.swagger.annotations.ApiModelProperty;import lombok.Data;import lombok.experimental.Accessors;import com.bytefinger.common.security.annotation.Excel;import com.bytefinger.toutuo.common.annotation.HistoryFieldLog;/** * <p> * 子公司-风险检查 * </p> * * @author Jone * @since 2023-03-17 */@Data@Accessors(chain = true)@TableName("biz_project_company_risk_inspection")@ApiModel(value = "ProjectCompanyRiskInspection对象", description = "子公司-风险检查")public class ProjectCompanyRiskInspection extends BaseEntity {    /**     * 子公司id     */    @ApiModelProperty(value = "子公司id", hidden = false, required = false)    @TableField("company_id")    @HistoryFieldLog("子公司id")    @Excel(name = "子公司id")    private Long companyId;    /**     * 企业名称     */    @ApiModelProperty(value = "企业名称", hidden = false, required = false)    @TableField(exist = false)    @HistoryFieldLog("企业名称")    private String companyName;    /**     * 公司编码     */    @ApiModelProperty(value = "公司编码", hidden = false, required = false)    @TableField(exist = false)    @HistoryFieldLog("公司编码")    private String companyBizNo;    /**     * 社会统一信用代码     */    @ApiModelProperty(value = "社会统一信用代码", hidden = false, required = false)    @TableField(exist = false)    @HistoryFieldLog("社会统一信用代码")    private String companyNo;    /**     * 检查节点     */    @ApiModelProperty(value = "检查节点", hidden = false, required = false)    @TableField("node")    @HistoryFieldLog("检查节点")    @Excel(name = "检查节点")    private String node;    /**     * 里程碑时间     */    @ApiModelProperty(value = "里程碑时间", hidden = false, required = false)    @TableField("milepost_time")    @HistoryFieldLog("里程碑时间")    @Excel(name = "里程碑时间")    private Date milepostTime;    /**     * 提醒时间     */    @ApiModelProperty(value = "提醒时间", hidden = false, required = false)    @TableField("reminder_time")    @HistoryFieldLog("提醒时间")    @Excel(name = "提醒时间")    private Date reminderTime;    /**     * 提醒内容     */    @ApiModelProperty(value = "提醒内容", hidden = false, required = false)    @TableField("content")    @HistoryFieldLog("提醒内容")    @Excel(name = "提醒内容")    private String content;    /**     * 创建时间     */    @ApiModelProperty(value = "创建时间", hidden = false, required = false)    @TableField(value = "create_time",  fill = FieldFill.INSERT)    @HistoryFieldLog("创建时间")    @Excel(name = "创建时间", sort = 14)    private Date createTime;    /**     * 创建人     */    @ApiModelProperty(value = "创建人", hidden = false, required = false)    @TableField(value = "create_user_id",  fill = FieldFill.INSERT)    @HistoryFieldLog("创建人")    private Long createUserId;    @ApiModelProperty(value = "创建人信息", hidden = false, required = false)    @TableField(exist = false)    @DataFillField(dataField = "createUserId", fillMethod = FillMethod.USER)    private UserVO createUser;    /**     * 备注     */    @ApiModelProperty(value = "备注", hidden = false, required = false)    @TableField("remark")    @HistoryFieldLog("备注")    @Excel(name = "备注")    private String remark;    @ApiModelProperty(value = "创建人", hidden = false, required = false)    @TableField(exist = false)    @HistoryFieldLog("创建人")    private Long userId;    @ApiModelProperty(value = "已过期时间", hidden = false, required = false)    @TableField(exist = false)    private String expired;}