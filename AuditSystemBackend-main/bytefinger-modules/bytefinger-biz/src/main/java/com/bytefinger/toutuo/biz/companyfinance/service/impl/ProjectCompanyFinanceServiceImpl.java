package com.bytefinger.toutuo.biz.companyfinance.service.impl;import cn.hutool.http.HttpUtil;import com.alibaba.fastjson2.JSONObject;import com.bytefinger.common.core.utils.DateUtils;import com.bytefinger.toutuo.biz.companyfinance.domain.ProjectCompanyFinance;import com.bytefinger.toutuo.biz.companyfinance.domain.ProjectCompanyFinanceAssets;import com.bytefinger.toutuo.biz.companyfinance.domain.ProjectCompanyFinanceCashFlow;import com.bytefinger.toutuo.biz.companyfinance.domain.ProjectCompanyFinanceProfit;import com.bytefinger.toutuo.biz.companyfinance.mapper.ProjectCompanyFinanceMapper;import com.bytefinger.toutuo.biz.companyfinance.service.IProjectCompanyFinanceAssetsService;import com.bytefinger.toutuo.biz.companyfinance.service.IProjectCompanyFinanceCashFlowService;import com.bytefinger.toutuo.biz.companyfinance.service.IProjectCompanyFinanceProfitService;import com.bytefinger.toutuo.biz.companyfinance.service.IProjectCompanyFinanceService;import com.bytefinger.toutuo.biz.projectcompany.domain.ProjectCompany;import com.bytefinger.toutuo.biz.projectcompany.service.IProjectCompanyService;import com.bytefinger.toutuo.common.service.BizService;import lombok.NoArgsConstructor;import org.apache.commons.lang3.time.DateFormatUtils;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import org.springframework.util.CollectionUtils;import javax.annotation.Resource;import java.util.List;/** * <p> * 财务信息 服务实现类 * </p> * * @author Jone * @since 2023-03-17 */@Service@NoArgsConstructorpublic class ProjectCompanyFinanceServiceImpl extends BizService<ProjectCompanyFinanceMapper, ProjectCompanyFinance> implements IProjectCompanyFinanceService {    @Resource    private IProjectCompanyFinanceAssetsService financeAssetsService;    @Resource    private IProjectCompanyFinanceProfitService financeProfitService;    @Resource    private IProjectCompanyFinanceCashFlowService financeCashFlowService;    @Resource    private IProjectCompanyService profitCompanyService;    @Resource    private ProjectCompanyFinanceMapper projectCompanyFinanceMapper;//    @Value("${finance.sync.url}")//    private String syncUrl;    @Override    @Transactional(rollbackFor = Exception.class)    public boolean save(ProjectCompanyFinance finance) {        boolean result = super.save(finance);        if(!CollectionUtils.isEmpty(finance.getAssetsList())){            List<ProjectCompanyFinanceAssets> assetsList = finance.getAssetsList();            assetsList.forEach(v -> {                v.setFinanceId(finance.getId());                v.setCompanyId(finance.getCompanyId());            });            financeAssetsService.saveBatch(assetsList);        }        if(!CollectionUtils.isEmpty(finance.getCashFlowList())){            List<ProjectCompanyFinanceCashFlow> cashFlowList = finance.getCashFlowList();            cashFlowList.forEach(v -> {                v.setFinanceId(finance.getId());                v.setCompanyId(finance.getCompanyId());            });            financeCashFlowService.saveBatch(cashFlowList);        }        if(!CollectionUtils.isEmpty(finance.getProfitList())){            List<ProjectCompanyFinanceProfit> profitList = finance.getProfitList();            profitList.forEach(v -> {                v.setFinanceId(finance.getId());                v.setCompanyId(finance.getCompanyId());            });            financeProfitService.saveBatch(profitList);        }        return result;    }//    @Override//    public String sync(ProjectCompanyFinance companyFinance) {//        ProjectCompany company = profitCompanyService.getById(companyFinance.getCompanyId());//        JSONObject json = new JSONObject();//        json.put("organizationcode", company.getCompanyNo());//        json.put("startDate", DateFormatUtils.format(companyFinance.getBeginTime(), DateUtils.YYYY_MM));//        json.put("endDate", DateFormatUtils.format(companyFinance.getEndTime(), DateUtils.YYYY_MM));//        json.put("ver", companyFinance.getVer());//        String body = HttpUtil.createPost(syncUrl).contentType("application/json").body(json.toString()).execute().body();//        return body;//    }    @Override    public ProjectCompanyFinance totalByCompanyId(Long companyId) {        return projectCompanyFinanceMapper.totalByCompanyId(companyId);    }}