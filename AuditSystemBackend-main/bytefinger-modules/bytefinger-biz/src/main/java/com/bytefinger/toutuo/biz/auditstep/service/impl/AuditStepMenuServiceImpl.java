package com.bytefinger.toutuo.biz.auditstep.service.impl;import com.baomidou.mybatisplus.core.conditions.Wrapper;import com.baomidou.mybatisplus.core.toolkit.Wrappers;import com.bytefinger.common.core.utils.AuditStepMenuTreeUtils;import com.bytefinger.common.core.web.domain.vo.AuditStepMenuVO;import com.bytefinger.toutuo.biz.auditstep.domain.AuditStepMenu;import com.bytefinger.toutuo.biz.auditstep.mapper.AuditStepMenuMapper;import com.bytefinger.toutuo.biz.auditstep.service.IAuditStepMenuService;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import lombok.AllArgsConstructor;import org.springframework.stereotype.Service;import java.util.List;import java.util.stream.Collectors;/** * <p> * 项目步骤菜单 服务实现类 * </p> * * @author Jone * @since 2023-01-31 */@Service@AllArgsConstructorpublic class AuditStepMenuServiceImpl extends ServiceImpl<AuditStepMenuMapper, AuditStepMenu> implements IAuditStepMenuService {    private final AuditStepMenuMapper auditStepMenuMapper;    @Override    public List<AuditStepMenuVO> tree(Wrapper<AuditStepMenu> queryWrapper) {       return tree(queryWrapper, null);    }    @Override    public List<AuditStepMenuVO> tree(long parentId) {        List<AuditStepMenuVO> treeEntities = getAuditStepMenuVOS(Wrappers.<AuditStepMenu>lambdaQuery().orderByAsc(AuditStepMenu::getSorts));        return AuditStepMenuTreeUtils.listTreeByParentId(treeEntities, parentId);    }    @Override    public List<AuditStepMenuVO> tree(Wrapper<AuditStepMenu> queryWrapper, Integer isDocument) {        List<AuditStepMenuVO> treeEntities = getAuditStepMenuVOS(queryWrapper);        return AuditStepMenuTreeUtils.listTreeByDocument(treeEntities,isDocument);    }    private List<AuditStepMenuVO> getAuditStepMenuVOS(Wrapper<AuditStepMenu> queryWrapper) {        List<AuditStepMenu> auditStepMenus = auditStepMenuMapper.selectList(queryWrapper);        List<AuditStepMenuVO> treeEntities = auditStepMenus.stream().map(item -> new AuditStepMenuVO()                .setId(item.getId())                .setParentId(item.getParentId())                .setName(item.getName())                .setCode(item.getCode())                .setLevel(item.getLevel())                .setSorts(item.getSorts())                .setIsDocument(item.getIsDocument())                .setOaApproval(item.getOaApproval())                .setOfflineApproval(item.getOfflineApproval())).collect(Collectors.toList());        return treeEntities;    }}