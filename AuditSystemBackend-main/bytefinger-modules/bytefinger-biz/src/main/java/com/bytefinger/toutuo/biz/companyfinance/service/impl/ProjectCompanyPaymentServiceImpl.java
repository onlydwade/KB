package com.bytefinger.toutuo.biz.companyfinance.service.impl;import com.alibaba.csp.sentinel.command.CommandConstants;import com.baomidou.mybatisplus.core.metadata.IPage;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;import com.bytefinger.common.core.constant.Constants;import com.bytefinger.common.core.enums.ShiFou;import com.bytefinger.common.core.service.ThisService;import com.bytefinger.common.das.domain.vo.QueryPage;import com.bytefinger.common.security.annotation.DataFill;import com.bytefinger.toutuo.biz.companyfinance.domain.ProjectCompanyPayment;import com.bytefinger.toutuo.biz.companyfinance.mapper.ProjectCompanyPaymentMapper;import com.bytefinger.toutuo.biz.companyfinance.service.IProjectCompanyPaymentService;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import com.bytefinger.toutuo.biz.project.service.impl.ProjectServiceImpl;import com.bytefinger.toutuo.common.service.BizService;import lombok.AllArgsConstructor;import org.springframework.stereotype.Service;import org.springframework.util.CollectionUtils;import java.util.Date;/** * <p> * 企业联系人 服务实现类 * </p> * * @author Jone * @since 2023-03-17 */@Service@AllArgsConstructorpublic class ProjectCompanyPaymentServiceImpl extends BizService<ProjectCompanyPaymentMapper, ProjectCompanyPayment> implements IProjectCompanyPaymentService, ThisService<ProjectCompanyPaymentServiceImpl> {    private final ProjectCompanyPaymentMapper projectCompanyPaymentMapper;    @Override    public ProjectCompanyPayment changeProcess(Long id, Long userId, String processDescription) {        ProjectCompanyPayment projectCompanyPayment = new ProjectCompanyPayment();        projectCompanyPayment.setId(id);        projectCompanyPayment.setProcessDescription(processDescription);        projectCompanyPayment.setProcessStatus(ShiFou.SHI.getCode());        projectCompanyPayment.setProcessTime(new Date());        projectCompanyPayment.setProcessUserId(userId);        projectCompanyPaymentMapper.updateById(projectCompanyPayment);        return null;    }    @Override    @DataFill    public IPage<ProjectCompanyPayment> page(QueryPage queryPage) {        return this.page(queryPage.toPage(), queryPage.getWrapper());    }    @Override    @DataFill    public IPage<ProjectCompanyPayment> page(Long stepMenuId, QueryPage queryPage) {        Page<ProjectCompanyPayment> page = this.page(queryPage.toPage(), queryPage.getWrapper());        if(CollectionUtils.isEmpty(page.getRecords())){            return page;        }        super.dataFillDcoument(stepMenuId, page);        return page;    }}