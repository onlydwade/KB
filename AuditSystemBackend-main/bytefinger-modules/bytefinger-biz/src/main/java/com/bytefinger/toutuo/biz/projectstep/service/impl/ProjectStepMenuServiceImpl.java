package com.bytefinger.toutuo.biz.projectstep.service.impl;import com.baomidou.mybatisplus.core.conditions.Wrapper;import com.baomidou.mybatisplus.core.toolkit.Wrappers;import com.bytefinger.common.core.utils.ProjectStepMenuTreeUtils;import com.bytefinger.common.core.utils.TreeUtils;import com.bytefinger.common.core.web.domain.vo.ProjectStepMenuVO;import com.bytefinger.common.core.web.domain.vo.TreeEntityVO;import com.bytefinger.toutuo.biz.project.domain.ProjectAchievement;import com.bytefinger.toutuo.biz.project.mapper.ProjectMapper;import com.bytefinger.toutuo.biz.projectstep.domain.ProjectStepMenu;import com.bytefinger.toutuo.biz.projectstep.mapper.ProjectStepMenuMapper;import com.bytefinger.toutuo.biz.projectstep.service.IProjectStepMenuService;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import lombok.AllArgsConstructor;import org.apache.poi.ss.formula.functions.T;import org.springframework.stereotype.Service;import java.util.List;import java.util.stream.Collectors;/** * <p> * 项目步骤菜单 服务实现类 * </p> * * @author Jone * @since 2023-01-31 */@Service@AllArgsConstructorpublic class ProjectStepMenuServiceImpl extends ServiceImpl<ProjectStepMenuMapper, ProjectStepMenu> implements IProjectStepMenuService {    private final ProjectStepMenuMapper projectStepMenuMapper;    @Override    public List<ProjectStepMenuVO> tree(Wrapper<ProjectStepMenu> queryWrapper) {       return tree(queryWrapper, null);    }    @Override    public List<ProjectStepMenuVO> tree(long parentId) {        List<ProjectStepMenuVO> treeEntities = getProjectStepMenuVOS(Wrappers.<ProjectStepMenu>lambdaQuery().orderByAsc(ProjectStepMenu::getSorts));        return ProjectStepMenuTreeUtils.listTreeByParentId(treeEntities, parentId);    }    @Override    public List<ProjectStepMenuVO> tree(Wrapper<ProjectStepMenu> queryWrapper, Integer isDocument) {        List<ProjectStepMenuVO> treeEntities = getProjectStepMenuVOS(queryWrapper);        return ProjectStepMenuTreeUtils.listTreeByDocument(treeEntities,isDocument);    }    private List<ProjectStepMenuVO> getProjectStepMenuVOS(Wrapper<ProjectStepMenu> queryWrapper) {        List<ProjectStepMenu> projectStepMenus = projectStepMenuMapper.selectList(queryWrapper);        List<ProjectStepMenuVO> treeEntities = projectStepMenus.stream().map(item -> new ProjectStepMenuVO()                .setId(item.getId())                .setParentId(item.getParentId())                .setName(item.getName())                .setCode(item.getCode())                .setLevel(item.getLevel())                .setSorts(item.getSorts())                .setIsDocument(item.getIsDocument())                .setOaApproval(item.getOaApproval())                .setOfflineApproval(item.getOfflineApproval())).collect(Collectors.toList());        return treeEntities;    }}