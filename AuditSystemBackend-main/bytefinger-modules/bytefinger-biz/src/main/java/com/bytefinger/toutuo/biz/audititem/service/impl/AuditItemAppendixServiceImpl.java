package com.bytefinger.toutuo.biz.audititem.service.impl;import com.baomidou.mybatisplus.core.metadata.IPage;import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;import com.bytefinger.common.das.domain.vo.QueryPage;import com.bytefinger.toutuo.biz.audititem.domain.AuditItem;import com.bytefinger.toutuo.biz.audititem.domain.AuditItemAppendix;import com.bytefinger.toutuo.biz.audititem.mapper.AuditItemAppendixMapper;import com.bytefinger.toutuo.biz.audititem.service.IAuditItemAppendixService;import com.bytefinger.toutuo.biz.audititem.service.IAuditItemService;import lombok.AllArgsConstructor;import org.springframework.stereotype.Service;import java.util.Arrays;import java.util.List;import java.util.stream.Collectors;/** * <p> * 审计项目附录表 服务实现类 * </p> * * @author Jone * @since 2025-08-08 */@Service@AllArgsConstructorpublic class AuditItemAppendixServiceImpl extends ServiceImpl<AuditItemAppendixMapper, AuditItemAppendix> implements IAuditItemAppendixService {    private final AuditItemAppendixMapper auditItemAppendixMapper;    private final IAuditItemService auditItemService;    @Override    public IPage<AuditItemAppendix> page(QueryPage queryPage) {        Page<AuditItemAppendix> page = this.page(queryPage.toPage(), queryPage.getWrapper());        List<AuditItemAppendix> records = page.getRecords();        if(CollectionUtils.isEmpty(records)){            return page;        }        records.forEach(appendix -> {            String auditItemIds = appendix.getAuditItemIds();            if(auditItemIds != null && auditItemIds.length() > 0){                String[] auditItemIdArray = auditItemIds.split(",");                long[] arrays = Arrays.stream(auditItemIdArray)                        .mapToLong(Long::parseLong)                        .toArray();                List<AuditItem> auditItems = auditItemService.listByIds(Arrays.asList(arrays));                String refNo = auditItems.stream()                        .map(ites -> ites.getItemCategoryShort() + ites.getRefNo())                        .collect(Collectors.joining(","));                appendix.setRefNo(refNo);                String findingsNo = auditItems.stream()                        .map(ites -> ites.getRefNo().toString())                        .collect(Collectors.joining(","));                appendix.setFindingsNo(findingsNo);            }        });        return page;    }}