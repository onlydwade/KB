---
# 此角色負責複製並執行 AuditSystem 的部署腳本

- name: Sync the entire AuditSystemVM package to remote server
  ansible.builtin.copy:
    src: AuditSystemVM/   # 複製 files/ 目錄下的整個 AuditSystemVM/ 目錄
    dest: "{{ remote_deploy_path }}/" # 複製到遠端的 /opt/deploy/，最終路徑為 /opt/deploy/AuditSystemVM
    mode: '0644'
  tags:
    - always

- name: Set execute permissions for all .sh scripts within the package
  ansible.builtin.file:
    path: "{{ remote_deploy_path }}/{{ project_source_dir }}/" # 路徑為 /opt/deploy/AuditSystemVM/
    state: directory
    recurse: yes
    mode: '0755'
    patterns: "*.sh"
  tags:
    - always

# --- 後續的 shell 任務保持不變 ---
# 它們的 chdir 會正確地指向 /opt/deploy/AuditSystemVM

- name: 1. Run system setup and install dependencies
  ansible.builtin.shell:
    cmd: ./install-ubuntu-setup.sh
    chdir: "{{ remote_deploy_path }}/{{ project_source_dir }}"
  environment:
    DB_ROOT_PASSWORD: "{{ db_root_password }}"
  tags:
    - setup

- name: 2. Run Java compatibility check
  ansible.builtin.shell:
    cmd: ./check-java-compatibility.sh
    chdir: "{{ remote_deploy_path }}/{{ project_source_dir }}"
  tags:
    - setup

# ... 其他所有 shell 任務 ...
# (setup-nacos.sh, deploy-backend.sh, etc.)
# 它們現在可以正常工作，因為它們的相對路徑 (如 nacos-config) 是存在的。

- name: 3. Run Nacos service discovery setup
  ansible.builtin.shell:
    cmd: ./setup-nacos.sh
    chdir: "{{ remote_deploy_path }}/{{ project_source_dir }}"
  environment:
    DB_APP_USER: "{{ db_app_user }}"
    DB_APP_PASSWORD: "{{ db_app_password }}"
    NACOS_USER: "{{ nacos_user }}"
    NACOS_PASSWORD: "{{ nacos_password }}"
    APP_ADMIN_USER: "{{ app_admin_user }}"
    APP_ADMIN_PASSWORD: "{{ app_admin_password }}"
  tags:
    - deploy

# ... 省略 deploy-backend, deploy-frontend, configure-nginx ...

- name: 7. Manage all services
  ansible.builtin.shell:
    cmd: "./manage-services.sh {{ service_action }}"
    chdir: "{{ remote_deploy_path }}/{{ project_source_dir }}"
  tags:
    - manage